<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplot on R Doodles</title>
    <link>/categories/ggplot/</link>
    <description>Recent content in Ggplot on R Doodles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Jan 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/categories/ggplot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Paired line plots</title>
      <link>/2019/01/paired-line-plots/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/paired-line-plots/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#load-libraries&#34;&gt;load libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#make-some-fake-data&#34;&gt;make some fake data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#make-a-plot-with-ggplot&#34;&gt;make a plot with ggplot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;ggplot scripts to draw figures like those in the Dynamic Ecology post &lt;a href=&#34;https://dynamicecology.wordpress.com/2019/01/21/paired-line-plots-a-k-a-reaction-norms-to-visualize-likert-data/#comments&#34;&gt;Paired line plots (a.k.a. “reaction norms”) to visualize Likert data&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;load-libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;load libraries&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(ggpubr)
library(data.table)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-some-fake-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;make some fake data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(3)
n &amp;lt;- 40
self &amp;lt;- rbinom(n, 5, 0.25) + 1
others &amp;lt;- self + rbinom(n, 3, 0.5)
fd &amp;lt;- data.table(id=factor(rep(1:n, 2)),
                 who=factor(rep(c(&amp;quot;self&amp;quot;, &amp;quot;others&amp;quot;), each=n)),
                 stigma &amp;lt;- c(self, others))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-a-plot-with-ggplot&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;make a plot with ggplot&lt;/h1&gt;
&lt;p&gt;The students are identified by the column “id”. Each students’ two responses (“self” and “others”) are joined by a line using geom_line(), which knows who to join with the “group=id” statement in the aes function in line 1. The alpha setting draws transparent lines (alpha=1 is opaque) so the more lines that are superimposed the darker the line. The lines are slightly jittered in the vertical direction so that overlapping lines appear wider.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;jitter_mag &amp;lt;- 0.03
gg &amp;lt;- ggplot(data=fd, aes(x=who, y=stigma, group=id)) +
  geom_line(size=1,
            alpha=0.3, 
            position=position_jitter(w=0, h=jitter_mag)) +
  ylab(&amp;quot;Amount of stigma (1=low, 6=high)&amp;quot;) +
  xlab(&amp;quot;Responding about views of others or self&amp;quot;) +
  theme_pubr() +
  NULL
gg&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-22-paired-line-plots_files/figure-html/ggplot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Interaction plots with ggplot2</title>
      <link>/2018/10/interaction-plots-with-ggplot2/</link>
      <pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/interaction-plots-with-ggplot2/</guid>
      <description>


&lt;p&gt;ggpubr is a fantastic resource for teaching applied biostats because it makes ggplot a bit easier for students. I’m not super familiar with all that ggpubr can do, but I’m not sure it includes a good “interaction plot” function. Maybe I’m wrong. But if I’m not, here is a simple function to create a gg_interaction plot.&lt;/p&gt;
&lt;p&gt;The gg_interaction function returns a ggplot of the &lt;em&gt;modeled&lt;/em&gt; means and standard errors and not the raw means and standard errors computed from each group independently. The modeled means and errors are computed using the emmeans function from the emmeans package. If a random term is passed, gg_interaction uses the function lmer, from the package lme4, to fit a linear mixed model with the random term as a random intercept.&lt;/p&gt;
&lt;p&gt;(requires ggplot2, data.table, and emmeans)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gg_interaction &amp;lt;- function(x, y, random=NULL, data){
  # x is a vector of the column labels of categorical variables
  # y is the response column
  # random is a column name of a blocking factor
  # data is a data.frame or data.table
  dt &amp;lt;- data.table(data)
  fixed_part &amp;lt;- paste(y, &amp;quot;~&amp;quot;, paste(x[1], x[2], sep=&amp;quot;*&amp;quot;))
  if(is.null(random)){ # linear model
    lm_formula &amp;lt;- formula(fixed_part)
    fit &amp;lt;- lm(lm_formula, data=dt)
  }else{ ## linear mixed model
    random_part &amp;lt;- paste(&amp;quot;(1|&amp;quot;, random, &amp;quot;)&amp;quot;, sep=&amp;quot;&amp;quot;)
    lmm_formula &amp;lt;- formula(paste(fixed_part, random_part, sep=&amp;quot; + &amp;quot;))
    fit &amp;lt;- lmer(lmm_formula, data=dt)
  }
  fit.emm &amp;lt;- data.table(summary(emmeans(fit, specs=x)))
  new_names &amp;lt;- c(&amp;quot;f1&amp;quot;, &amp;quot;f2&amp;quot;)
  setnames(fit.emm, old=x, new=new_names)
  pd &amp;lt;- position_dodge(.3)
  gg &amp;lt;- ggplot(data=fit.emm, aes(x=f1, y=emmean, shape=f2, group=f2)) +
    #geom_jitter(position=pd, color=&amp;#39;gray&amp;#39;, size=2) +
    geom_point(color=&amp;#39;black&amp;#39;, size=4, position=pd) +
    geom_errorbar(aes(ymin=(emmean-SE), ymax=(emmean+SE)), 
                  color=&amp;#39;black&amp;#39;, width=.2, position=pd) +
    geom_line(position=pd) +
    xlab(x[1]) +
    ylab(y) +
    theme_bw() +
    guides(shape=guide_legend(title=x[2])) +
    theme(axis.title=element_text(size = rel(1.5)),
          axis.text=element_text(size = rel(1.5)),
          legend.title=element_text(size = rel(1.3)),
          legend.text=element_text(size = rel(1.3))) +
    NULL
  return(gg)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I use data from a study of the synergistic effect of UVB and temperature on infection intensity (citations below) to show how to use the function. The data are from a 2 x 2 factorial experiment and with a single blocking (random) factor “tank”.&lt;/p&gt;
&lt;p&gt;Dryad source: Cramp RL, Reid S, Seebacher F, Franklin CE (2014) Data from: Synergistic interaction between UVB radiation and temperature increases susceptibility to parasitic infection in a fish. Dryad Digital Repository. &lt;a href=&#34;https://doi.org/10.5061/dryad.74b31&#34; class=&#34;uri&#34;&gt;https://doi.org/10.5061/dryad.74b31&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Article Source: Cramp RL, Reid S, Seebacher F, Franklin CE (2014) Synergistic interaction between UVB radiation and temperature increases susceptibility to parasitic infection in a fish. Biology Letters 10(9): 20140449. &lt;a href=&#34;https://doi.org/10.1098/rsbl.2014.0449&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1098/rsbl.2014.0449&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(readxl)
library(data.table)
library(lme4)
library(emmeans)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_path &amp;lt;- &amp;quot;../data&amp;quot;
folder &amp;lt;- &amp;quot;Data from Synergistic interaction between UVB radiation and temperature increases susceptibility to parasitic infection in a fish&amp;quot;
filename &amp;lt;- &amp;quot;Cramp et al raw data.xlsx&amp;quot;
file_path &amp;lt;- paste(data_path, folder, filename, sep=&amp;quot;/&amp;quot;)
fish &amp;lt;- data.table(read_excel(file_path, sheet=&amp;quot;Infection Intensity&amp;quot;))
setnames(fish, old=colnames(fish), new=c(&amp;quot;UV&amp;quot;, &amp;quot;Temp&amp;quot;, &amp;quot;Tank&amp;quot;, &amp;quot;Whitespots&amp;quot;))
fish[, UV:=factor(UV, c(&amp;quot;Low&amp;quot;, &amp;quot;High&amp;quot;))]
fish[, Temp:=factor(Temp)]
gg &amp;lt;- gg_interaction(x=c(&amp;quot;UV&amp;quot;, &amp;quot;Temp&amp;quot;), y=&amp;quot;Whitespots&amp;quot;, random=&amp;quot;Tank&amp;quot;, data=fish)
gg&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-15-interaction-plots-with-ggplot2_files/figure-html/gg_interaction-example-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A simple ggplot of some measure against depth</title>
      <link>/2018/09/a-simple-ggplot-of-some-measure-against-depth/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/a-simple-ggplot-of-some-measure-against-depth/</guid>
      <description>


&lt;div id=&#34;set-up&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;set up&lt;/h1&gt;
&lt;p&gt;The goal is to plot the measure of something, say O2 levels, against depth (soil or lake), with the measures taken on multiple days&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(data.table)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;first-create-fake-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;First – create fake data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;depths &amp;lt;- c(0, seq(10,100, by=10))
dates &amp;lt;- c(&amp;quot;Jan-18&amp;quot;, &amp;quot;Mar-18&amp;quot;, &amp;quot;May-18&amp;quot;, &amp;quot;Jul-18&amp;quot;)
x &amp;lt;- expand.grid(date=dates, depth=depths)
n &amp;lt;- nrow(x)
head(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     date depth
## 1 Jan-18     0
## 2 Mar-18     0
## 3 May-18     0
## 4 Jul-18     0
## 5 Jan-18    10
## 6 Mar-18    10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;X &amp;lt;- model.matrix(formula(~date + depth), data=x)
head(X)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   (Intercept) dateMar-18 dateMay-18 dateJul-18 depth
## 1           1          0          0          0     0
## 2           1          1          0          0     0
## 3           1          0          1          0     0
## 4           1          0          0          1     0
## 5           1          0          0          0    10
## 6           1          1          0          0    10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beta &amp;lt;- c(0,1,2,3,0.5)
y &amp;lt;- X%*%beta + rnorm(n, sd=5)
fake_data &amp;lt;- data.frame(O2=y, x)
head(fake_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          O2   date depth
## 1 -5.618861 Jan-18     0
## 2 13.885828 Mar-18     0
## 3  1.309404 May-18     0
## 4  4.442890 Jul-18     0
## 5  6.504647 Jan-18    10
## 6  5.378927 Mar-18    10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;second-make-ggplot&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Second – make ggplot&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gg &amp;lt;- ggplot(data=fake_data, aes(x=depth, y=O2, group=date, color=date)) +
  geom_point() +
  geom_line() +
  coord_flip() +
  # coord_flip does not make the y-axis the x-axis but the horizontal axis. 
  # so still need to refer to &amp;quot;y&amp;quot; to modify O2
  # specify position=&amp;quot;right&amp;quot; to flip the y axis to the top after coord_flip
  scale_y_continuous(position = &amp;quot;right&amp;quot;) +
  # reverse the depth axis, which makes it go down instead of up
  scale_x_reverse() +
  xlab(&amp;quot;Depth&amp;quot;) +
  ylab(expression(O[2])) +
  theme_minimal() +
  NULL
gg&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-10-a-simple-ggplot-of-some-measure-against-depth_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>